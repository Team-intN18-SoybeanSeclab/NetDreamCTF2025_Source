import sys
import random
from sympy import nextprime
import binascii

FLAG = b"flag{xxxxxxx}"
BIT_SIZE = 512
DIFF = 1000

def generate_close_primes(bit_size, diff):
    start = random.getrandbits(bit_size) | 1
    p = nextprime(start)
    q = nextprime(p + diff)
    return p, q

def flag_to_int(flag_bytes):
    return int.from_bytes(flag_bytes, byteorder='big')

def main():
    p, q = generate_close_primes(BIT_SIZE, DIFF)
    n = p * q
    e = 3

    m = flag_to_int(FLAG)

    c = pow(m, e, n)

    print(f"n = {n}")
    print(f"e = {e}")
    print(f"c = {c}")

if __name__ == "__main__":
    main()

"""
n = 3256593900815599638610948588846270419272266309072355018531019815816383416972716648196614202756266923662468043040766972587895880348728177684427108179441398076920699534139836200520410133083399544975367893285080239622582380507397956076038256757810824984700446326253944197017126171652309637891515864542581815539
e = 3
c = 1668144786169714702301094076704686642891065952249900945234348491495868262367689770718451252978033214169821458376529832891775500377565608075759008139982766645172498702491199793075638838575243018129218596030822468832530007275522627172632933
"""